box-shadow:
  - class: bs-none
    output: "box-shadow: none;"
  - class: bs-sm
    output: "box-shadow: 0 @su2 @su8 fade(@black-700, 10%);"
  - class: bs-md
    output: "box-shadow: 0 @su4 @su8 fade(@black-700, 20%);"
  - class: bs-lg
    output: "box-shadow: 0 @su4 @su12 fade(@black-800, 20%);"
  - class: bs-i-sm
    output: "box-shadow: inset 0 @su2/2 @su8 0 fade(@black-200, 30%);"
  - class: bs-i-md
    output: "box-shadow: inset 0 @su2/2 @su8 0 fade(@black-350, 35%);"
  - class: bs-i-lg
    output: "box-shadow: inset 0 @su2/2 @su12 0 fade(@black-350, 50%);"

box-sizing:
  - class: box-content
    output: "box-sizing: content-box;"
    define: "<p class='mt0'>Indicates that the element's width and height affects only the element's content box, that is the area minus the element's margin, padding, and borders. <em>This is the default browswer value.</em></p>"
  - class: box-border
    output: "box-sizing: border-box;"
    define: "<p class='mt0'>Indicates that the element's width and height affects the entire element. <emThis is the <strong>preferred</strong> default value for Stacks.</em</p>"
  - class: box-unset
    output: "box-sizing: unset;"
    define: "<p class='mt0'>Removes the previously set <code class='stacks-code'>box-sizing</code> value, reverting it back to the initial browser value.</p>"

cursors:
  - class: c-auto
    output: "cursor: auto;"
  - class: c-default
    output: "cursor: default;"
  - class: c-pointer
    output: "cursor: pointer;"
  - class: c-wait
    output: "cursor: wait;"
  - class: c-move
    output: "cursor: move;"
  - class: c-not-allowed
    output: "cursor: not-allowed;"

display:
  - class: d-block
    output: "display: block;"
    define: "<p class='mt0'>This turns any element into a block-level element.</p>"
  - class: d-inline
    output: "display: inline;"
    define: "<p class='mt0'>This turns any element into an inline element that flows like text.</p>"
  - class: d-inline-block
    output: "display: inline-block;"
    define: "<p class='mt0'>This turns any element into a block-level box that will be flowed with surrounding content as if it were a single inline box (behaving much like a replaced element would)</p>"
  - class: d-table
    output: "display: table;"
    define: "<p class='mt0'>This makes your element behave like <code class='stacks-code'>table</code> HTML elements. It defines a block-level box.</p>"
  - class: d-table-cell
    output: "display: table-cell;"
    define: "<p class='mt0'>These elements behave like <code class='stacks-code'>td</code> HTML elements.</p>"
  - class: d-none
    output: "display: none;"
    define: "<p class='mt0'>Effectively removes the element from the DOM. Useful for showing / hiding elements.</p>"
  - class: d-unset
    output: "display: unset;"
    define: "<p class='mt0'>Removes any display property from the element.</p>"

floats:
  - class: float-left
    output: "float: left;"
    define: "<p class='mt0'>Indicates that the element must float on the left side of the parent container.</p>"
  - class: float-right
    output: "float: right;"
    define: "<p class='mt0'>Indicates that the element must float on the right side of the parent container.</p>"
  - class: float-none
    output: "float: none;"
    define: "<p class='mt0'>Indicates that the element must not float.</p>"
  - class: clearfix
    output: ".clearfix();"
    define: "<p class='mt0'>This class calls the <code class='stacks-code'>.clearfix();</code> mixin, which fixes a layout bug. Floating an object takes it out of the DOM order. When all child itmes within a parent container contain a float property then, the parent container will collapse. The <code class='stacks-code'>.clearfix</code> class forces the parent container to not collapse.</p>"
  - class: clear-left
    output: "clear: left;"
    define: "<p class='mt0'>Indicates that the element must be moved down to clear past <em>left</em> floats.</p>"
  - class: clear-right
    output: "clear: right;"
    define: "<p class='mt0'>Indicates that the element must be moved down to clear past <em>right</em> floats.</p>"
  - class: clear-both
    output: "clear: both;"
    define: "<p class='mt0'>Indicates that the element must be moved down to clear past <em>left and right</em> floats.</p>"
  - class: clear-none
    output: "clear: none;"
    define: "<p class='mt0'>Indicates that the element is <em>not</em> moved to clear past floating elements.</p>"

width-percentage:
  - class: "w-auto"
    output: "width: auto;"
  - class: "w0"
    output: "width: 0;"
  - class: "w10"
    output: "width: 10%;"
  - class: "w20"
    output: "width: 20%;"
  - class: "w25"
    output: "width: 20%;"
  - class: "w30"
    output: "width: 30%;"
  - class: "w40"
    output: "width: 40%"
  - class: "w50"
    output: "width: 50%;"
  - class: "w60"
    output: "width: 60%;"
  - class: "w70"
    output: "width: 70%;"
  - class: "w75"
    output: "width: 75%;"
  - class: "w80"
    output: "width: 80%;"
  - class: "w90"
    output: "width: 90%;"
  - class: "w100"
    output: "width: 100%;"

width-static:
  - class: "ws1"
    output: "width: 105px;"
  - class: "ws2"
    output: "width: 211px;"
  - class: "ws3"
    output: "width: 316px;"
  - class: "ws4"
    output: "width: 421px;"
  - class: "ws5"
    output: "width: 527px;"
  - class: "ws6"
    output: "width: 632px;"
  - class: "ws7"
    output: "width: 737px;"
  - class: "ws8"
    output: "width: 843px;"
  - class: "ws9"
    output: "width: 948px;"
  - class: "ws10"
    output: "width: 1053px;"
  - class: "ws11"
    output: "width: 1159px;"
  - class: "ws12"
    output: "width: 1264px;"

width-max:
  - class: "wmx-none"
    output: "max-width: none;"
  - class: "wmx1"
    output: "max-width: 105px;"
  - class: "wmx2"
    output: "max-width: 211px;"
  - class: "wmx3"
    output: "max-width: 316px;"
  - class: "wmx4"
    output: "max-width: 421px;"
  - class: "wmx5"
    output: "max-width: 527px;"
  - class: "wmx6"
    output: "max-width: 632px;"
  - class: "wmx7"
    output: "max-width: 737px;"
  - class: "wmx8"
    output: "max-width: 843px;"
  - class: "wmx9"
    output: "max-width: 948px;"
  - class: "wmx10"
    output: "max-width: 1053px;"
  - class: "wmx11"
    output: "max-width: 1159px;"
  - class: "wmx12"
    output: "max-width: 1264px;"
  - class: "wmx100"
    output: "max-width: 100%;"

width-min:
  - class: "wmn-none"
    output: "min-width: none;"
  - class: "wmn1"
    output: "min-width: 105px;"
  - class: "wmn2"
    output: "min-width: 211px;"
  - class: "wmn3"
    output: "min-width: 316px;"
  - class: "wmn4"
    output: "min-width: 421px;"
  - class: "wmn5"
    output: "min-width: 527px;"
  - class: "wmn6"
    output: "min-width: 632px;"
  - class: "wmn7"
    output: "min-width: 737px;"
  - class: "wmn8"
    output: "min-width: 843px;"
  - class: "wmn9"
    output: "min-width: 948px;"
  - class: "wmn10"
    output: "min-width: 1053px;"
  - class: "wmn11"
    output: "min-width: 1159px;"
  - class: "wmn12"
    output: "min-width: 1264px;"
  - class: "wmn100"
    output: "min-width: 100%;"

height-percentage:
  - class: "h-auto"
    output: "height: auto;"
  - class: "h0"
    output: "height: 0;"
  - class: "h50"
    output: "height: 50%;"
  - class: "h100"
    output: "height: 100%;"

height-max-min:
  - class: "hmx-none"
    output: "max-height: none;"
  - class: "hmx0"
    output: "max-height: 0;"
  - class: "hmx100"
    output: "max-height: 100%;"
  - class: "hmn-none"
    output: "min-height: none;"
  - class: "hmn0"
    output: "min-height: 0;"
  - class: "hmn100"
    output: "min-height: 100%;"

opacity:
  - class: o0
    output: "opacity: 0;"
  - class: o5
    output: "opacity: 0.05;"
  - class: o10
    output: "opacity: 0.1;"
  - class: o20
    output: "opacity: 0.2;"
  - class: o30
    output: "opacity: 0.3;"
  - class: o40
    output: "opacity: 0.4;"
  - class: o50
    output: "opacity: 0.5;"
  - class: o60
    output: "opacity: 0.6;"
  - class: o70
    output: "opacity: 0.7;"
  - class: o80
    output: "opacity: 0.8;"
  - class: o90
    output: "opacity: 0.9;"
  - class: o100
    output: "opacity: 1;"

overflow:
  - class: overflow-auto
    output: "overflow: auto;"
    define: "<p class='mt0'>If content fits inside the content box, it looks the same as visible, but still establishes a new block-formatting context. Desktop browsers like Firefox provide scrollbars if content overflows.</p>"
  - class: overflowx-auto
    output: "overflow-x: auto;"
    define: "<p class='mt0'>If content fits inside the content box, it looks the same as visible in the x dimension, but still establishes a new block-formatting context. Desktop browsers like Firefox provide scrollbars if content overflows.</p>"
  - class: overflowy-auto
    output: "overflow-y: auto;"
    define: "<p class='mt0'>If content fits inside the content box, it looks the same as visible in the y dimension, but still establishes a new block-formatting context. Desktop browsers like Firefox provide scrollbars if content overflows.</p>"
  - class: overflow-hidden
    output: "overflow: hidden;"
    define: "<p class='mt0'>Content is clipped if necessary to fit the content box. No scrollbars are provided.</p>"
  - class: overflowx-hidden
    output: "overflow-x: hidden;"
    define: "<p class='mt0'>Content is clipped if necessary to fit the content box. No scrollbars are provided in the x dimension.</p>"
  - class: overflowy-hidden
    output: "overflow-y: hidden;"
    define: "<p class='mt0'>Content is clipped if necessary to fit the content box. No scrollbars are provided in the y dimension.</p>"
  - class: overflow-scroll
    output: "overflow: scroll;"
    define: "<p class='mt0'>Content is clipped if necessary to fit the content box. Browsers display scrollbars whether or not any content is actually clipped. (This prevents scrollbars from appearing or disappearing when the content changes.) Printers may still print overflowing content.</p>"
  - class: overflowx-scroll
    output: "overflow-x: scroll;"
    define: "<p class='mt0'>Content is clipped if necessary to fit the content box. Browsers display scrollbars whether or not any content is actually clipped in the x dimension.</p>"
  - class: overflowy-scroll
    output: "overflow-y: scroll;"
    define: "<p class='mt0'>Content is clipped if necessary to fit the content box. Browsers display scrollbars whether or not any content is actually clipped in the y dimension.</p>"
  - class: overflow-visible
    output: "overflow: visible;"
    define: "<p class='mt0'>Content is not clipped and may be rendered outside the content box. This is the default value.</p>"

position:
  - class: ps-absolute
    output: "position: absolute;"
    define: "<p class='mt0'>Absolutely positions an element. Typically is used in conjunction with <code class='stacks-code'>top</code>, <code class='stacks-code'>right</code>, <code class='stacks-code'>bottom</code>, and <code class='stacks-code'>left</code> properties.</p><p><em>Note: Absolutely positioning an element takes it out of the DOM flow and puts it automatically above all relatively positioned items which don't have a <code class='stacks-code'>z-index</code> assigned.</em></p>"
  - class: ps-fixed
    output: "position: fixed;"
    define: "<p class='mt0'>Fixes an element within the viewport. Typically is used in conjunction with <code class='stacks-code'>top</code>, <code class='stacks-code'>right</code>, <code class='stacks-code'>bottom</code>, and <code class='stacks-code'>left</code> properties.</p><p><em>Note: Fixing an element's position, like absolute positioning, takes it out of the DOM flow and puts it automatically above all relatively positioned items.</em></p>"
  - class: ps-relative
    output: "position: relative;"
    define: "<p class='mt0'>Relatively positions an element in relation to elements around it. The <code class='stacks-code'>top</code> and <code class='stacks-code'>bottom</code> properties specify the vertical offset from its normal position. In the same way the <code class='stacks-code'>left</code> and <code class='stacks-code'>right</code> properties specify the horizontal offset.</p>"
  - class: ps-static
    output: "position: static;"
    define: "<p class='mt0'>An element is positioned according to the document's flow. The <code class='stacks-code'>top</code>, <code class='stacks-code'>right</code>, <code class='stacks-code'>bottom</code>, <code class='stacks-code'>left</code>, and <code class='stacks-code'>z-index</code> properties have <em>no effect</em>.</p><p><strong>This is the default value.</strong></p>"
  - class: ps-sticky
    output: "position: sticky;"
    define: "<p class='mt0'>An element is positioned according to the document's flow, and then offset relative to its flow root and containing block. This creates a new stacking context.</p><p class='mt0'><strong class='mb4'>Notes:</strong><br/>Sticky elements, by design, will not work inside an element with <code class='stacks-code'>overflow:hidden;</code> or <code class='stacks-code'>overflow:auto;</code> values.</p><p class='mt0'>The sticky position is still considered an experimental value and requires a <code class='stacks-code'>position: -webkit-sticky;</code> vendor prefix for Safari.</p>"

vertical-alignment:
  - class: "va-baseline"
    output: "vertical-align: baseline;"
  - class: "va-bottom"
    output: "vertical-align: bottom;"
  - class: "va-middle"
    output: "vertical-align: middle;"
  - class: "va-sub"
    output: "vertical-align: sub;"
  - class: "va-super"
    output: "vertical-align: super;"
  - class: "va-text-bottom"
    output: "vertical-align: text-bottom;"
  - class: "va-text-top"
    output: "vertical-align: text-top;"
  - class: "va-top"
    output: "vertical-align: top;"
  - class: "va-unset"
    output: "vertical-align: unset;"

z-index:
  - class: "z-hide"
    output: "z-index: -1;"
  - class: "z-base"
    output: "z-index: 0;"
  - class: "z-selected"
    output: "z-index: 25;"
  - class: "z-active"
    output: "z-index: 50;"
  - class: "z-nav"
    output: "z-index: 1000;"
  - class: "z-nav-fixed"
    output: "z-index: 1050;"
  - class: "z-dropdown"
    output: "z-index: 2000;"
  - class: "z-popover"
    output: "z-index: 3000;"
  - class: "z-tooltip"
    output: "z-index: 4000;"
  - class: "z-banner"
    output: "z-index: 5000;"
  - class: "z-modal-bg"
    output: "z-index: 8050;"
  - class: "z-modal"
    output: "z-index: 9000;"
